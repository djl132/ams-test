

//////////////////////////PIE CHART/////
<!doctype html>
<script src="code/chapter/15_game.js"></script>
<script src="code/game_levels.js"></script>
<script src="code/chapter/16_canvas.js"></script>

<canvas width="600" height="200"></canvas>
<script>
    var cx = document.querySelector("canvas").getContext("2d");

    function parallelogram(x, y) {
        cx.beginPath();
        cx.moveTo(x, y);
        cx.lineTo(x + 50, y);
        cx.lineTo(x + 70, y + 50);
        cx.lineTo(x - 20, y + 50);
        cx.closePath();
        cx.stroke();
    }
    parallelogram(30, 30);

    function diamond(x, y) {
        cx.translate(x + 30, y + 30);
        cx.rotate(Math.PI / 4);
        cx.fillStyle = "red";
        cx.fillRect(-30, -30, 60, 60);
        cx.resetTransform();
    }
    diamond(140, 30);

    function zigzag(x, y) {
        cx.beginPath();
        cx.moveTo(x, y);
        for (var i = 0; i < 8; i++) {
            cx.lineTo(x + 80, y + i * 8 + 4);
            cx.lineTo(x, y + i * 8 + 8);
        }
        cx.stroke();
    }
    zigzag(240, 20);

    function spiral(x, y) {
        var radius = 50, xCenter = x + radius, yCenter = y + radius;
        cx.beginPath();
        cx.moveTo(xCenter, yCenter);
        for (var i = 0; i < 300; i++) {
            var angle = i * Math.PI / 30;
            var dist = radius * i / 300;
            cx.lineTo(xCenter + Math.cos(angle) * dist,
                    yCenter + Math.sin(angle) * dist);
        }
        cx.stroke();
    }
    spiral(340, 20);

    function star(x, y) {
        var radius = 50, xCenter = x + radius, yCenter = y + radius;
        cx.beginPath();
        cx.moveTo(xCenter + radius, yCenter);
        for (var i = 1; i <= 8; i++) {

            //track next point in the star to draw to
            var angle = i * Math.PI / 4;
            cx.quadraticCurveTo(xCenter, yCenter,
                    xCenter + Math.cos(angle) * radius,
                    yCenter + Math.sin(angle) * radius);
        }
        cx.fillStyle = "gold";
        cx.fill();
    }
    star(440, 20);
</script>


////////////////////////PIE CHART/////
<!doctype html>
<script src="code/chapter/15_game.js"></script>
<script src="code/game_levels.js"></script>
<script src="code/chapter/16_canvas.js"></script>

<canvas width="600" height="300"></canvas>
<script>
    var cx = document.querySelector("canvas").getContext("2d");
    var total = results.reduce(function(sum, choice) {
        return sum + choice.count;
    }, 0);

    var currentAngle = -0.5 * Math.PI;
    var centerX = 300, centerY = 150;
    // Add code to draw the slice labels in this loop.
    results.forEach(function(result) {
        var sliceAngle = (result.count / total) * 2 * Math.PI;
        cx.beginPath();
        cx.arc(centerX, centerY, 100,
                currentAngle, currentAngle + sliceAngle);
        currentAngle += sliceAngle;
        cx.lineTo(centerX, centerY);
        cx.fillStyle = result.color;
        cx.fill();
    });
</script>



////////////////////////BOUNCING BALL/////

<!doctype html>
<script src="code/chapter/15_game.js"></script>
    <script src="code/game_levels.js"></script>
    <script src="code/chapter/16_canvas.js"></script>

//create a canvas starting from 0,0 absolute position
    <canvas width="400" height="400"></canvas>
    <script>
//get context of canvas to interact manipulate its content and properties
var cx = document.querySelector("canvas").getContext("2d");

//tracks round of animation
var lastTime = null;

//pass in time for animation
function frame(time) {

    //ONLY ANIMATE IF THIS ISN'T FIRST FRAME
    if (lastTime != null)
    //update frame
        updateAnimation(Math.min(100, time - lastTime) / 1000);
    lastTime = time;

    //requests first frame
    requestAnimationFrame(frame);
}

//first animation
//frame invisibly takes in the current time from the browser or something
requestAnimationFrame(frame);

//initial position of circle
var x = 100, y = 300;
var radius = 10;
var speedX = 100, speedY = 60;

function updateAnimation(step) {

    //clear previous frame image and set up canvas again.
    cx.clearRect(0,0,400,400);
    cx.strokeStyle = "blue";
    cx.lineWidth = 4;

    //create rectangle again
    cx.strokeRect(25, 25, 350, 350);

    ///move and set range of free motion
    x += step * speedX;
    y += step * speedY;

    //if center of ball touches boundaries
    if (x < 25 + radius || x > 375 - radius)
        speedX = -speedX;
    if (y < 25 + radius || y > 375 - radius)
        speedY = -speedY;
    cx.fillStyle = "red";

    ////create circle in new position
    cx.beginPath();
    //center is x,y
    cx.arc(x, y, radius, 0, 7);
    cx.fill();
}
</script>